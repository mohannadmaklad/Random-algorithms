Depending on the fact that sum of consecutive numbers starting from 1 up to n is equal to n*(n+1)/2
you can calculate the sequence that start from 1 to 10,000 for example.

for the sequences that doesn't start from 1 :
suppose the sequence starts from number s and ends at number e, you can make a sequence from 1 to n and then subtract another sequence
that starts from 1 and ends at s.

for example :
N=10
1 + 2 + 3 + 4 =10 

s = 1 so we can represent the sequence by the formula : (e(e+1)/2) = 10 and solve for e where e is the end of sequence (e = 4)

N=20
2+3+4+5+6 = 20

can be representes by :  e(e+1)/2 - s(s+1)/2 = 20 (solving this : e = 6, s = 1)

N=30
4+5+6+7+8 = 30

can be representes by :  e(e+1)/2 - s(s+1)/2 = 30 (solving this : e = 8, s = 3)
using some algebra : 
e(e+1) - s(s+1) = 2*n --> e(e+1) - s(s+1) - 2n = 0

sources Wiki and stackoverflow

my work :D :
noticing that the starting number is always = s+1 so changing the variables : s =  s'-1 , so the equation will be:
e(e+1) - s'(s'-1) - 2n = 0 where s' is the starting number
e^2 + e - (s'^2 +s' -2n) = 0 we will iterate over s'(start of sequence) and get e(end of sequence)

algorithm :

for s ranges from 0 to n :
	c = -s^2 +s -2*n
	end = findRoots(1,1,c) // a^2 = 1, a =1 , c = -s^2 +s -2*n, will return -1 if there are no roots
	if(end > 0) printSequence(s,e);
	



